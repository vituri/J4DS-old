[
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Julia for Data Science",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "data-visualization.html#introduction",
    "href": "data-visualization.html#introduction",
    "title": "2  Data visualization",
    "section": "2.1 Introduction",
    "text": "2.1 Introduction\n\nusing PalmerPenguins, DataFrames\nusing AlgebraOfGraphics\nusing TidierData, TidierPlots\nusing Pipe: @pipe\n\n\npenguins = dropmissing(DataFrame(PalmerPenguins.load()))\nfirst(penguins, 6)\n\n6×7 DataFrame\n\n\n\nRow\nspecies\nisland\nbill_length_mm\nbill_depth_mm\nflipper_length_mm\nbody_mass_g\nsex\n\n\n\nString15\nString15\nFloat64\nFloat64\nInt64\nInt64\nString7\n\n\n\n\n1\nAdelie\nTorgersen\n39.1\n18.7\n181\n3750\nmale\n\n\n2\nAdelie\nTorgersen\n39.5\n17.4\n186\n3800\nfemale\n\n\n3\nAdelie\nTorgersen\n40.3\n18.0\n195\n3250\nfemale\n\n\n4\nAdelie\nTorgersen\n36.7\n19.3\n193\n3450\nfemale\n\n\n5\nAdelie\nTorgersen\n39.3\n20.6\n190\n3650\nmale\n\n\n6\nAdelie\nTorgersen\n38.9\n17.8\n181\n3625\nfemale\n\n\n\n\n\n\n\ndescribe(penguins)\n\n7×7 DataFrame\n\n\n\nRow\nvariable\nmean\nmin\nmedian\nmax\nnmissing\neltype\n\n\n\nSymbol\nUnion…\nAny\nUnion…\nAny\nInt64\nDataType\n\n\n\n\n1\nspecies\n\nAdelie\n\nGentoo\n0\nString15\n\n\n2\nisland\n\nBiscoe\n\nTorgersen\n0\nString15\n\n\n3\nbill_length_mm\n43.9928\n32.1\n44.5\n59.6\n0\nFloat64\n\n\n4\nbill_depth_mm\n17.1649\n13.1\n17.3\n21.5\n0\nFloat64\n\n\n5\nflipper_length_mm\n200.967\n172\n197.0\n231\n0\nInt64\n\n\n6\nbody_mass_g\n4207.06\n2700\n4050.0\n6300\n0\nInt64\n\n\n7\nsex\n\nfemale\n\nmale\n0\nString7"
  },
  {
    "objectID": "data-visualization.html#first-steps",
    "href": "data-visualization.html#first-steps",
    "title": "2  Data visualization",
    "section": "2.2 First steps",
    "text": "2.2 First steps\n\n@ggplot(data = penguins) + \n    @geom_point(aes(x = flipper_length_mm, y = body_mass_g))\n\n\n\n\n\nTidierPlots.GGPlot(Any[TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"geom_name\" =&gt; \"geom_point\"), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.Visual(MakieCore.Scatter, {}), nothing, Any[], {}), Layer(identity, nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}())], Dict{String, Symbol}(), Layer(identity, 333×7 DataFrameColumns\n Row │ species    island     bill_length_mm  bill_depth_mm  flipper_length_mm  ⋯\n     │ String15   String15   Float64         Float64        Int64              ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Adelie     Torgersen            39.1           18.7                181  ⋯\n   2 │ Adelie     Torgersen            39.5           17.4                186\n   3 │ Adelie     Torgersen            40.3           18.0                195\n   4 │ Adelie     Torgersen            36.7           19.3                193\n   5 │ Adelie     Torgersen            39.3           20.6                190  ⋯\n   6 │ Adelie     Torgersen            38.9           17.8                181\n   7 │ Adelie     Torgersen            39.2           19.6                195\n   8 │ Adelie     Torgersen            41.1           17.6                182\n   9 │ Adelie     Torgersen            38.6           21.2                191  ⋯\n  10 │ Adelie     Torgersen            34.6           21.1                198\n  11 │ Adelie     Torgersen            36.6           17.8                185\n  ⋮  │     ⋮          ⋮            ⋮               ⋮                ⋮          ⋱\n 324 │ Chinstrap  Dream                50.2           18.8                202\n 325 │ Chinstrap  Dream                45.6           19.4                194  ⋯\n 326 │ Chinstrap  Dream                51.9           19.5                206\n 327 │ Chinstrap  Dream                46.8           16.5                189\n 328 │ Chinstrap  Dream                45.7           17.0                195\n 329 │ Chinstrap  Dream                55.8           19.8                207  ⋯\n 330 │ Chinstrap  Dream                43.5           18.1                202\n 331 │ Chinstrap  Dream                49.6           18.2                193\n 332 │ Chinstrap  Dream                50.8           19.0                210\n 333 │ Chinstrap  Dream                50.2           18.7                198  ⋯\n                                                  2 columns and 312 rows omitted, Any[], {}), Dict{Any, Any}(\"height\" =&gt; 400, \"data\" =&gt; :penguins, \"width\" =&gt; 600))\n\n\n\n\npp = data(penguins) * mapping(:flipper_length_mm, :body_mass_g)\ndraw(pp)\n\n\n\n\n\n@ggplot(\n  penguins,\n  aes(x = flipper_length_mm, y = body_mass_g, color = species)\n) +\n  @geom_point()\n\n\n\n\n\nTidierPlots.GGPlot(Any[TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"geom_name\" =&gt; \"geom_point\"), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.Visual(MakieCore.Scatter, {}), nothing, Any[], {}), Layer(identity, nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}())], Dict(\"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Layer(identity, 333×7 DataFrameColumns\n Row │ species    island     bill_length_mm  bill_depth_mm  flipper_length_mm  ⋯\n     │ String15   String15   Float64         Float64        Int64              ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Adelie     Torgersen            39.1           18.7                181  ⋯\n   2 │ Adelie     Torgersen            39.5           17.4                186\n   3 │ Adelie     Torgersen            40.3           18.0                195\n   4 │ Adelie     Torgersen            36.7           19.3                193\n   5 │ Adelie     Torgersen            39.3           20.6                190  ⋯\n   6 │ Adelie     Torgersen            38.9           17.8                181\n   7 │ Adelie     Torgersen            39.2           19.6                195\n   8 │ Adelie     Torgersen            41.1           17.6                182\n   9 │ Adelie     Torgersen            38.6           21.2                191  ⋯\n  10 │ Adelie     Torgersen            34.6           21.1                198\n  11 │ Adelie     Torgersen            36.6           17.8                185\n  ⋮  │     ⋮          ⋮            ⋮               ⋮                ⋮          ⋱\n 324 │ Chinstrap  Dream                50.2           18.8                202\n 325 │ Chinstrap  Dream                45.6           19.4                194  ⋯\n 326 │ Chinstrap  Dream                51.9           19.5                206\n 327 │ Chinstrap  Dream                46.8           16.5                189\n 328 │ Chinstrap  Dream                45.7           17.0                195\n 329 │ Chinstrap  Dream                55.8           19.8                207  ⋯\n 330 │ Chinstrap  Dream                43.5           18.1                202\n 331 │ Chinstrap  Dream                49.6           18.2                193\n 332 │ Chinstrap  Dream                50.8           19.0                210\n 333 │ Chinstrap  Dream                50.2           18.7                198  ⋯\n                                                  2 columns and 312 rows omitted, Any[], {}), Dict{Any, Any}(\"height\" =&gt; 400, \"data\" =&gt; :penguins, \"width\" =&gt; 600))\n\n\n\n\npp2 = pp * mapping(color = :species)\ndraw(pp2)\n\n\n\n\n\n@ggplot(\n  penguins,\n  aes(x = flipper_length_mm, y = body_mass_g, color = species)\n) +\n  @geom_point() + \n  @geom_smooth(method = \"lm\")\n\n\n\n\n\nTidierPlots.GGPlot(Any[TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"geom_name\" =&gt; \"geom_point\"), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.Visual(MakieCore.Scatter, {}), nothing, Any[], {}), Layer(identity, nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}()), TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"method\" =&gt; \"lm\", \"geom_name\" =&gt; \"geom_smooth\"), Layer(identity, nothing, Any[], {}), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.LinearAnalysis{MakieCore.Automatic}(200, false, MakieCore.Automatic(), 0.95), nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}())], Dict(\"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Layer(identity, 333×7 DataFrameColumns\n Row │ species    island     bill_length_mm  bill_depth_mm  flipper_length_mm  ⋯\n     │ String15   String15   Float64         Float64        Int64              ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Adelie     Torgersen            39.1           18.7                181  ⋯\n   2 │ Adelie     Torgersen            39.5           17.4                186\n   3 │ Adelie     Torgersen            40.3           18.0                195\n   4 │ Adelie     Torgersen            36.7           19.3                193\n   5 │ Adelie     Torgersen            39.3           20.6                190  ⋯\n   6 │ Adelie     Torgersen            38.9           17.8                181\n   7 │ Adelie     Torgersen            39.2           19.6                195\n   8 │ Adelie     Torgersen            41.1           17.6                182\n   9 │ Adelie     Torgersen            38.6           21.2                191  ⋯\n  10 │ Adelie     Torgersen            34.6           21.1                198\n  11 │ Adelie     Torgersen            36.6           17.8                185\n  ⋮  │     ⋮          ⋮            ⋮               ⋮                ⋮          ⋱\n 324 │ Chinstrap  Dream                50.2           18.8                202\n 325 │ Chinstrap  Dream                45.6           19.4                194  ⋯\n 326 │ Chinstrap  Dream                51.9           19.5                206\n 327 │ Chinstrap  Dream                46.8           16.5                189\n 328 │ Chinstrap  Dream                45.7           17.0                195\n 329 │ Chinstrap  Dream                55.8           19.8                207  ⋯\n 330 │ Chinstrap  Dream                43.5           18.1                202\n 331 │ Chinstrap  Dream                49.6           18.2                193\n 332 │ Chinstrap  Dream                50.8           19.0                210\n 333 │ Chinstrap  Dream                50.2           18.7                198  ⋯\n                                                  2 columns and 312 rows omitted, Any[], {}), Dict{Any, Any}(\"height\" =&gt; 400, \"data\" =&gt; :penguins, \"width\" =&gt; 600))\n\n\n\n\nlayers = linear() + mapping()\npp2 = pp * layers * mapping(color = :species)\ndraw(pp2)\n\n\n\n\n\n@ggplot(\n  penguins,\n  aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  @geom_point(aes(color = species)) + \n  @geom_smooth(method = \"lm\")\n\n\n\n\n\nTidierPlots.GGPlot(Any[TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"geom_name\" =&gt; \"geom_point\"), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.Visual(MakieCore.Scatter, {}), nothing, Any[], {}), Layer(identity, nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}()), TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"method\" =&gt; \"lm\", \"geom_name\" =&gt; \"geom_smooth\"), Layer(identity, nothing, Any[], {}), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.LinearAnalysis{MakieCore.Automatic}(200, false, MakieCore.Automatic(), 0.95), nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}())], Dict(\"x\" =&gt; :flipper_length_mm, \"y\" =&gt; :body_mass_g), Layer(identity, 333×7 DataFrameColumns\n Row │ species    island     bill_length_mm  bill_depth_mm  flipper_length_mm  ⋯\n     │ String15   String15   Float64         Float64        Int64              ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Adelie     Torgersen            39.1           18.7                181  ⋯\n   2 │ Adelie     Torgersen            39.5           17.4                186\n   3 │ Adelie     Torgersen            40.3           18.0                195\n   4 │ Adelie     Torgersen            36.7           19.3                193\n   5 │ Adelie     Torgersen            39.3           20.6                190  ⋯\n   6 │ Adelie     Torgersen            38.9           17.8                181\n   7 │ Adelie     Torgersen            39.2           19.6                195\n   8 │ Adelie     Torgersen            41.1           17.6                182\n   9 │ Adelie     Torgersen            38.6           21.2                191  ⋯\n  10 │ Adelie     Torgersen            34.6           21.1                198\n  11 │ Adelie     Torgersen            36.6           17.8                185\n  ⋮  │     ⋮          ⋮            ⋮               ⋮                ⋮          ⋱\n 324 │ Chinstrap  Dream                50.2           18.8                202\n 325 │ Chinstrap  Dream                45.6           19.4                194  ⋯\n 326 │ Chinstrap  Dream                51.9           19.5                206\n 327 │ Chinstrap  Dream                46.8           16.5                189\n 328 │ Chinstrap  Dream                45.7           17.0                195\n 329 │ Chinstrap  Dream                55.8           19.8                207  ⋯\n 330 │ Chinstrap  Dream                43.5           18.1                202\n 331 │ Chinstrap  Dream                49.6           18.2                193\n 332 │ Chinstrap  Dream                50.8           19.0                210\n 333 │ Chinstrap  Dream                50.2           18.7                198  ⋯\n                                                  2 columns and 312 rows omitted, Any[], {}), Dict{Any, Any}(\"height\" =&gt; 400, \"data\" =&gt; :penguins, \"width\" =&gt; 600))\n\n\n\n\n# layers = linear() + mapping()\npp2 = pp * mapping(color = :species) + pp * linear()\ndraw(pp2)\n\n\n\n\n\n@ggplot(\n  penguins,\n  aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  @geom_point(aes(color = species, shape = species)) + \n  @geom_smooth(method = \"lm\")\n\n\n\n\n\nTidierPlots.GGPlot(Any[TidierPlots.Geom(Dict(\"shape\" =&gt; :species, \"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"geom_name\" =&gt; \"geom_point\"), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.Visual(MakieCore.Scatter, {}), nothing, Any[], {}), Layer(identity, nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}()), TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"method\" =&gt; \"lm\", \"geom_name\" =&gt; \"geom_smooth\"), Layer(identity, nothing, Any[], {}), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.LinearAnalysis{MakieCore.Automatic}(200, false, MakieCore.Automatic(), 0.95), nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}())], Dict(\"x\" =&gt; :flipper_length_mm, \"y\" =&gt; :body_mass_g), Layer(identity, 333×7 DataFrameColumns\n Row │ species    island     bill_length_mm  bill_depth_mm  flipper_length_mm  ⋯\n     │ String15   String15   Float64         Float64        Int64              ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Adelie     Torgersen            39.1           18.7                181  ⋯\n   2 │ Adelie     Torgersen            39.5           17.4                186\n   3 │ Adelie     Torgersen            40.3           18.0                195\n   4 │ Adelie     Torgersen            36.7           19.3                193\n   5 │ Adelie     Torgersen            39.3           20.6                190  ⋯\n   6 │ Adelie     Torgersen            38.9           17.8                181\n   7 │ Adelie     Torgersen            39.2           19.6                195\n   8 │ Adelie     Torgersen            41.1           17.6                182\n   9 │ Adelie     Torgersen            38.6           21.2                191  ⋯\n  10 │ Adelie     Torgersen            34.6           21.1                198\n  11 │ Adelie     Torgersen            36.6           17.8                185\n  ⋮  │     ⋮          ⋮            ⋮               ⋮                ⋮          ⋱\n 324 │ Chinstrap  Dream                50.2           18.8                202\n 325 │ Chinstrap  Dream                45.6           19.4                194  ⋯\n 326 │ Chinstrap  Dream                51.9           19.5                206\n 327 │ Chinstrap  Dream                46.8           16.5                189\n 328 │ Chinstrap  Dream                45.7           17.0                195\n 329 │ Chinstrap  Dream                55.8           19.8                207  ⋯\n 330 │ Chinstrap  Dream                43.5           18.1                202\n 331 │ Chinstrap  Dream                49.6           18.2                193\n 332 │ Chinstrap  Dream                50.8           19.0                210\n 333 │ Chinstrap  Dream                50.2           18.7                198  ⋯\n                                                  2 columns and 312 rows omitted, Any[], {}), Dict{Any, Any}(\"height\" =&gt; 400, \"data\" =&gt; :penguins, \"width\" =&gt; 600))\n\n\n\n\n# layers = linear() + mapping()\npp2 = pp * mapping(color = :species, marker = :species) + pp * linear()\ndraw(pp2)\n\n\n\n\n\n@ggplot(\n  penguins,\n  aes(x = flipper_length_mm, y = body_mass_g)\n) +\n  @geom_point(aes(color = species, shape = species)) + \n  @geom_smooth(method = \"lm\") + \n  @labs(     \n    title = \"Body mass and flipper length\",\n    subtitle = \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\",\n    x = \"Flipper length (mm)\", y = \"Body mass (g)\",\n    color = \"Species\", shape = \"Species\"  \n  )\n\n\n\n\n\nTidierPlots.GGPlot(Any[TidierPlots.Geom(Dict(\"shape\" =&gt; :species, \"x\" =&gt; :flipper_length_mm, \"color\" =&gt; :species, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"geom_name\" =&gt; \"geom_point\"), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.Visual(MakieCore.Scatter, {}), nothing, Any[], {}), Layer(identity, nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}()), TidierPlots.Geom(Dict(\"x\" =&gt; :flipper_length_mm, \"y\" =&gt; :body_mass_g), Dict{String, Any}(\"method\" =&gt; \"lm\", \"geom_name\" =&gt; \"geom_smooth\"), Layer(identity, nothing, Any[], {}), Layer(identity, nothing, Any[], {}), Layer(AlgebraOfGraphics.LinearAnalysis{MakieCore.Automatic}(200, false, MakieCore.Automatic(), 0.95), nothing, Any[], {}), [\"x\", \"y\"], Dict(\"strokecolor\" =&gt; \"strokecolor\", \"colour\" =&gt; \"color\", \"glowcolor\" =&gt; \"glowcolor\", \"stroke\" =&gt; \"strokewidth\", \"label\" =&gt; \"text\", \"alpha\" =&gt; \"alpha\", \"strokecolour\" =&gt; \"strokecolor\", \"size\" =&gt; \"markersize\", \"glowcolour\" =&gt; \"glowcolor\", \"errorbar_direction\" =&gt; \"direction\"…), Dict{Any, Any}())], Dict(\"x\" =&gt; :flipper_length_mm, \"y\" =&gt; :body_mass_g), Layer(identity, 333×7 DataFrameColumns\n Row │ species    island     bill_length_mm  bill_depth_mm  flipper_length_mm  ⋯\n     │ String15   String15   Float64         Float64        Int64              ⋯\n─────┼──────────────────────────────────────────────────────────────────────────\n   1 │ Adelie     Torgersen            39.1           18.7                181  ⋯\n   2 │ Adelie     Torgersen            39.5           17.4                186\n   3 │ Adelie     Torgersen            40.3           18.0                195\n   4 │ Adelie     Torgersen            36.7           19.3                193\n   5 │ Adelie     Torgersen            39.3           20.6                190  ⋯\n   6 │ Adelie     Torgersen            38.9           17.8                181\n   7 │ Adelie     Torgersen            39.2           19.6                195\n   8 │ Adelie     Torgersen            41.1           17.6                182\n   9 │ Adelie     Torgersen            38.6           21.2                191  ⋯\n  10 │ Adelie     Torgersen            34.6           21.1                198\n  11 │ Adelie     Torgersen            36.6           17.8                185\n  ⋮  │     ⋮          ⋮            ⋮               ⋮                ⋮          ⋱\n 324 │ Chinstrap  Dream                50.2           18.8                202\n 325 │ Chinstrap  Dream                45.6           19.4                194  ⋯\n 326 │ Chinstrap  Dream                51.9           19.5                206\n 327 │ Chinstrap  Dream                46.8           16.5                189\n 328 │ Chinstrap  Dream                45.7           17.0                195\n 329 │ Chinstrap  Dream                55.8           19.8                207  ⋯\n 330 │ Chinstrap  Dream                43.5           18.1                202\n 331 │ Chinstrap  Dream                49.6           18.2                193\n 332 │ Chinstrap  Dream                50.8           19.0                210\n 333 │ Chinstrap  Dream                50.2           18.7                198  ⋯\n                                                  2 columns and 312 rows omitted, Any[], {}), Dict{Any, Any}(\"subtitle\" =&gt; \"Dimensions for Adelie, Chinstrap, and Gentoo Penguins\", \"height\" =&gt; 400, \"shape\" =&gt; \"Species\", \"data\" =&gt; :penguins, \"x\" =&gt; \"Flipper length (mm)\", \"color\" =&gt; \"Species\", \"width\" =&gt; 600, \"title\" =&gt; \"Body mass and flipper length\", \"y\" =&gt; \"Body mass (g)\"))\n\n\n\n\n# layers = linear() + mapping()\npp2 = pp * mapping(color = :species, marker = :species) + pp * linear()\ndraw(pp2)"
  }
]